---
import { navBarLinks } from "../config";
import type { SEOInfo } from "../types/config";

interface Props {
  seo: SEOInfo;
}

const { seo } = Astro.props;
---

<script>
  const linkMenuButton = document.getElementById(
    "link-menu-button"
  ) as HTMLButtonElement;
  const linkMenu = document.getElementById("link-menu") as HTMLDivElement;
  const openIndicator = document.getElementById(
    "open-indicator"
  ) as HTMLSpanElement;

  linkMenuButton.addEventListener("click", () => {
    if (linkMenu.classList.contains("opacity-0")) {
      linkMenu.classList.remove("pointer-events-none");
      linkMenu.classList.remove("opacity-0");
      openIndicator.innerText = "-";
    } else {
      linkMenu.classList.add("pointer-events-none");
      linkMenu.classList.add("opacity-0");
      openIndicator.innerText = "+";
    }
  });

  document.addEventListener("click", (event) => {
    const isLinkMenuButtonClicked =
      event.target === linkMenuButton ||
      linkMenuButton.contains(event.target as Node);
    const isLinkMenuClicked =
      event.target === linkMenu || linkMenu.contains(event.target as Node);

    if (!isLinkMenuButtonClicked && !isLinkMenuClicked) {
      linkMenu.classList.add("pointer-events-none");
      linkMenu.classList.add("opacity-0");
      openIndicator.innerText = "+";
    }
  });

  document.addEventListener('astro:before-swap', () => {
    const main = document.querySelector('main');
    if (main) main.classList.add('fade-out');
  });
  
  document.addEventListener('astro:after-swap', () => {
    const main = document.querySelector('main');
    if (main) main.classList.add('fade-in');
  });
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{seo.title}</title>
    <meta name="description" content={seo.description} />
    <meta property="og:title" content={seo.title} />
    <meta property="og:description" content={seo.description} />
    <meta property="og:image" content={seo.image} />
    <script is:inline src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
  </head>
  <body>
    <header>
      <div class="px-6 py-6 max-w-2xl mx-auto">
        <nav>
          <ul class="hidden sm:flex sm:items-center sm:gap-2">
            {
              navBarLinks.map((link) => (
                <li>
                  <a
                    class="group px-4 py-2 rounded-lg hover:bg-gray-bg opacity-60 hover:opacity-100 transition-all"
                    href={link.url}
                    target={link.external ? "_blank" : "_self"}
                  >
                    {link.title}
                  </a>
                </li>
              ))
            }
          </ul>
          <div class="relative sm:hidden">
            <button id="link-menu-button" class="relative font-medium opacity-60 p-4">
              Menu <span id="open-indicator">+</span>
            </button>
            <div
              id="link-menu"
              class="absolute p-2 left-0 bg-gray-bg rounded-lg w-44 transition-opacity ease-in-out duration-300 opacity-0 z-40"
            >
              <ul>
                {
                  navBarLinks.map((link) => (
                    <li>
                      <a
                        class="block pl-4 py-3"
                        href={link.url}
                        target={link.external ? "_blank" : "_self"}
                      >
                        {link.title}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
        </nav>
      </div>
    </header>
    <main class="mb-32">
      <slot />
    </main>
    <footer></footer>
    <div id="particles-js" class="fixed inset-0 -z-10"></div>
    <div class="fixed inset-0 -z-20">
      <div class="absolute top-32 left-12 w-24 h-24 bg-blue-500/10 rounded-full blur-2xl"></div>
      <div class="absolute bottom-32 right-12 w-32 h-32 bg-blue-500/10 rounded-full blur-2xl"></div>
      <div class="absolute top-1/2 right-1/4 w-28 h-28 bg-blue-500/10 rounded-full blur-3xl"></div>
      <div class="absolute bottom-1/4 left-1/3 w-36 h-36 bg-blue-500/10 rounded-full blur-3xl"></div>
    </div>
  </body>
</html>

<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap");

  html {
    font-family: "Inter", sans-serif;
    background: #000000;
    scroll-behavior: smooth;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    color: white;
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  .hover-underline {
    text-decoration: underline 1px rgba(0, 0, 0, 0);
    text-underline-offset: 5px;
    transition: text-decoration-color 300ms;
  }

  .post:hover .hover-underline {
    text-decoration-color: rgba(255, 255, 255, 1);
  }

  .fade-in {
    animation: fadeIn 0.5s ease-in;
  }

  @keyframes fadeIn {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }

  /* Enhanced hover effects for links */
  .hover-link {
    position: relative;
    transition: all 0.3s ease;
  }

  .hover-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: white;
    transition: width 0.3s ease;
  }

  .hover-link:hover::after {
    width: 100%;
  }
</style>

<script>
  declare const particlesJS: any;
  
  window.addEventListener('load', function() {
    if (typeof particlesJS !== 'undefined') {
      particlesJS('particles-js', {
        particles: {
          number: { value: 80 },
          opacity: { value: 0.1 },
          size: { value: 3 },
          line_linked: { enable: true, opacity: 0.05 }
        }
      });
    }
  });
</script>
